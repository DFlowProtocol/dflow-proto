syntax = "proto3";
package dflow.noncedbank;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "noncedbank/params.proto";
import "noncedbank/nonced_bridge_state.proto";
// this line is used by starport scaffolding # 1

option go_package = "dflow/x/noncedbank/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dflow/noncedbank/params";
  }
  // Queries a NoncedBridgeState by index.
	rpc NoncedBridgeState(QueryGetNoncedBridgeStateRequest) returns (QueryGetNoncedBridgeStateResponse) {
		option (google.api.http).get = "/dflow/noncedbank/nonced_bridge_state";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetNoncedBridgeStateRequest {}

message QueryGetNoncedBridgeStateResponse {
	NoncedBridgeState NoncedBridgeState = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
